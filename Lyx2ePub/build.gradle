plugins {
    id "java"
    id "eclipse-wtp"
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

version '20210205'

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

compileJava {
    options.release = 8
}
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
        vendor = JvmVendorSpec.ADOPTOPENJDK
    }
}

repositories {
        jcenter()
        maven { url "https://jitpack.io/" }
        maven {
        	url "https://github.com/psiegman/mvn-repo/raw/master/releases"
        }
    }

jar {
    manifest {
        attributes "Main-Class": "com.cherokeelessons.converter.Main"
    }
}
shadowJar {
    archiveFileName = 'lyx2epub.jar'
    mergeServiceFiles()
}
    
dependencies {
		compile 'xml-apis:xml-apis:1.4.01'
        compile 'commons-io:commons-io:2.4'
        compile 'org.apache.commons:commons-text:1.8'
        compile 'nl.siegmann.epublib:epublib-core:3.1'
        compile 'org.imgscalr:imgscalr-lib:4.2'
        compile 'net.sf.kxml:kxml2:2.3.0'
        compile 'org.w3c.css:sac:1.3'
        compile 'net.sf.saxon:Saxon-HE:9.6.0-6'
        compile 'org.slf4j:slf4j-nop:1.7.12'
        compile 'com.io7m.xom:xom:1.2.10'
        compile 'net.lingala.zip4j:zip4j:2.6.0'
        compile 'com.fasterxml.jackson.core:jackson-databind:2.11.0'
        compile 'com.github.CherokeeLanguage:SimpleTextUi:-SNAPSHOT'
    }

configurations.all {
  resolutionStrategy {
  	force 'xml-apis:xml-apis:1.4.01'
  }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	javadoc.failOnError=false
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    //archives javadocJar
}

/*configurations.all {
    resolutionStrategy.cacheChangingModulesFor 30, 'seconds'
}*/

eclipse {
	project {
		name = 'Lyx2ePub'
	}
	jdt {
		
	}
	wtp {
	}
}

task "create-dirs" { doLast {
	sourceSets*.java.srcDirs*.each { it.mkdirs() }
	sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}}
