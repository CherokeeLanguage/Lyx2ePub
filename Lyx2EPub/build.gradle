plugins {
  id "us.kirchmeier.capsule" version "1.0-rc1"
}

apply plugin: "java"
apply plugin: "eclipse-wtp"

version '20151229'

sourceCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

def RTJAR = '/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar';
if (new File(RTJAR).exists()) {
	compileJava.options.bootClasspath=RTJAR
}
  
repositories {
        mavenCentral()
        jcenter()
        maven {
        	url "https://github.com/psiegman/mvn-repo/raw/master/releases"
        }
    }
    
task fatjar(type: FatCapsule) {
  	archiveName 'lyx2epub.jar'
  applicationClass 'com.cherokeelessons.converter.Main'
  capsuleManifest {
    	jvmArgs = ['-Dfile.encoding=UTF-8']
	}
}

dependencies {
		compile 'xml-apis:xml-apis:1.4.01'
        compile 'commons-io:commons-io:2.4'
        compile 'org.apache.commons:commons-lang3:3.4'
        compile 'nl.siegmann.epublib:epublib-core:3.1'
        compile 'org.imgscalr:imgscalr-lib:4.2'
        compile 'net.sf.kxml:kxml2:2.3.0'
        compile 'org.w3c.css:sac:1.3'
        compile 'net.sf.saxon:Saxon-HE:9.6.0-6'
        compile 'org.slf4j:slf4j-nop:1.7.12'
        compile 'com.io7m.xom:xom:1.2.10'
        compile 'net.lingala.zip4j:zip4j:1.3.2'
        compile 'com.fasterxml.jackson.core:jackson-databind:2.5.0'
    }

configurations.all {
  resolutionStrategy {
  	force 'xml-apis:xml-apis:1.4.01'
  }
}

eclipseJdt << {
    File f = file('.settings/org.eclipse.core.resources.prefs')
    f.write('eclipse.preferences.version=1\n')
    f.append('encoding/<project>=utf-8')
    f = file('.settings/org.eclipse.core.runtime.prefs')
    f.write('eclipse.preferences.version=1\n')
    f.append('line.separator=\\n\n')
}


eclipse {
	project {
		name = 'Lyx2EPub'
		comment = 'Lyx2EPub'
	}
	jdt {
		sourceCompatibility=1.8
		targetCompatibility=1.8
	}
	wtp {
		facet {
			facets = []
			facet name: 'jst.java', version: '1.8'
		}
	}
}

task "create-dirs" << {
	sourceSets*.java.srcDirs*.each { it.mkdirs() }
	sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}

eclipseJdt << {
    File f = file('.settings/org.eclipse.core.resources.prefs')
    f.write('eclipse.preferences.version=1\n')
    f.append('encoding/<project>=utf-8')
    f = file('.settings/org.eclipse.core.runtime.prefs')
    f.write('eclipse.preferences.version=1\n')
    f.append('line.separator=\\n\n')
}

project.afterEvaluate {
	// use jre lib matching version used by project, not the workspace default
	if (sourceCompatibility != null) {
		def target = project.sourceCompatibility.toString()
		def containerPrefix = "org.eclipse.jdt.launching.JRE_CONTAINER"
		def containerSuffix
		if (target =~ /1.[4-5]/) {
			containerSuffix = '/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-' + target
		} else if (target =~ /1.[6-8]/) {
			containerSuffix = '/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-' + target
		}
		if (containerSuffix != null) {
			project.eclipse.classpath {
				containers.removeAll { it.startsWith(containerPrefix) }
				containers.add(containerPrefix + containerSuffix)
			}
		}
	}
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}